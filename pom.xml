<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.infotel.seleniumRobot</groupId>
  <artifactId>seleniumRobot-example</artifactId>
  <version>3.14.2-SNAPSHOT</version>
  
  <name>selenium robot example</name>
  <description>An example project on how to use SeleniumRobot project available at https://github.com/bhecquet/seleniumRobot</description>
  <url>https://github.com/bhecquet/seleniumRobot-example.git</url>
  
  <!-- ####################################### -->
  <!-- Not needed for typical test application -->
  <licenses>
	<license>
		<name>The Apache License, Version 2.0</name>
		<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
	</license>
  </licenses>
  
  <developers>
        <developer>
            <name>Bertrand Hecquet</name>
            <email>bertrand.hecquet@groupe-mma.fr</email>
            <organization>covea</organization>
            <organizationUrl>http://www.covea.eu</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:bhecquet/seleniumRobot-example.git</connection>
        <developerConnection>scm:git:git@github.com:bhecquet/seleniumRobot-example.git</developerConnection>
        <url>git@github.com:bhecquet/seleniumRobot-example.git</url>
        
      <tag>HEAD</tag>
  </scm>
    
    <distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	
	<!-- /Not needed for typical test application -->
	<!-- ####################################### -->
    
  	<dependencies>
		<dependency>
			<groupId>com.infotel.seleniumRobot</groupId>
			<artifactId>core</artifactId>
			<version>[3.14.0,)</version>
			<exclusions>
				<exclusion>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	
	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
	
	<build>
		<finalName>${project.artifactId}</finalName>
		
		<!-- For running multiple versions of the same application on the seleniumRobot core, use the following line instead of the above
		<finalName>${project.artifactId}-${application.version.short}</finalName>
		-->
		<plugins>
		
			<!-- ####################################### -->
  			<!-- Not needed for typical test application -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-gitexe</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.3</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
					
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration> <!-- disable checking for java 8 -->
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
			              <keyname>${gpg.keyname}</keyname>
			              <passphraseServerId>${gpg.keyname}</passphraseServerId>
			              
			            </configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<!-- /Not needed for typical test application -->
			<!-- ####################################### -->
			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<executions>
					<execution>
						<id>default-testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
							 <outputEncoding>UTF-8</outputEncoding>
                			<argLine>-Dfile.encoding=UTF-8</argLine>
                			<encoding>${project.build.sourceEncoding}</encoding>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>true</excludeTransitive>
							<excludeGroupIds>com.infotel.seleniumRobot</excludeGroupIds>
							<excludeArtifactIds>core</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- the following plugin will create the variable 'application.version.short' which can be used to execute several versions of the same application on the same core -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>regex-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>

							<name>application.version.short</name>
							<value>${project.version}</value>
							<regex>^([0-9]+)\.([0-9]+)\.([0-9]+)(-SNAPSHOT)?$</regex>
							<replacement>$1.$2</replacement>
							<failIfNoMatch>true</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
					<execution>
						<id>copy-data</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/data/${project.artifactId}</outputDirectory>
							<!-- For running multiple versions of the same application on the seleniumRobot core, use the following line instead of the above
							<outputDirectory>${project.build.directory}/data/${project.artifactId}_${application.version.short}</outputDirectory>
							-->
							<resources>
								<resource>
									<directory>${project.basedir}/data/${project.artifactId}</directory>
								</resource>
							</resources>
						</configuration>            
					</execution>
					<execution>
						<id>copy-lib</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/lib</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-launcher</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/launcher</directory>
									<include>launch_${project.artifactId}.bat</include>
									<filtering>true</filtering>
								</resource>
							</resources>
							
						</configuration>            
					</execution>
				</executions>
				<configuration>
					<includeEmptyDirs>true</includeEmptyDirs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.11</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
			            <artifactId>aspectjtools</artifactId>
			            <version>1.9.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<showWeaveInfo>false</showWeaveInfo>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>com.infotel.seleniumRobot</groupId>
							<artifactId>core</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<complianceLevel>1.8</complianceLevel>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>../lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/plugins</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>default-jar</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/plugins</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<dependencies>
					<dependency>
						<groupId>${project.groupId}</groupId>
						<artifactId>${project.artifactId}</artifactId>
						<version>${project.version}</version>
					</dependency>
	        	</dependencies>
				<executions>
				    <execution>
				    	<id>archive</id> 
				    	<phase>package</phase>
				    	<goals>
							<goal>single</goal> 
				      	</goals>
				      	<configuration>
				      		<finalName>${project.artifactId}</finalName>
				      		<appendAssemblyId>false</appendAssemblyId>
				     		<archiveBaseDirectory>${project.build.directory}</archiveBaseDirectory>
				     		<outputDirectory>${project.basedir}</outputDirectory>
				     		
				     		<descriptorRefs>
		                		<descriptorRef>archiveArtifact</descriptorRef>
		              		</descriptorRefs>
				      	</configuration>
				  	</execution>
				</executions>
			</plugin>
			<plugin>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>1.7</version>
			    <executions>
			        <execution>
			            <phase>generate-sources</phase>
			            <configuration>
			                <target>
			                    <echo file="${project.basedir}/target/test-classes/${project.artifactId}-version.txt">${project.version}</echo>
			                </target>
			            </configuration>
			            <goals>
			                <goal>run</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
	
	</build>
</project>
